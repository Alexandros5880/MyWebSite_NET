// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebSite.Data;

namespace MyWebSite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220818151310_UpdateHomeMainParagraph")]
    partial class UpdateHomeMainParagraph
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            RoleId = "ad376a8f-9eab-4bb9-9fca-30b01540f445"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MyWebSite.Areas.Identity.Data.MyWebSiteRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ad376a8f-9eab-4bb9-9fca-30b01540f445",
                            ConcurrencyStamp = "c15fb5c0-7182-4c51-a649-a9668308a0e2",
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 23, DateTimeKind.Local).AddTicks(8805),
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin",
                            NormalizedName = "Admin"
                        });
                });

            modelBuilder.Entity("MyWebSite.Areas.Identity.Data.MyWebSiteUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfingPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8def480a-a87c-40ce-9e0f-28fbacd451ee",
                            ConfingPassword = "-Platanios719791",
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 24, DateTimeKind.Local).AddTicks(579),
                            Email = "alexandrosplatanios15@gmail.com",
                            EmailConfirmed = false,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            NormalizedEmail = "alexandrosplatanios15@gmail.com",
                            NormalizedUserName = "alexandrosplatanios15@gmail.com",
                            Password = "-Platanios719791",
                            PasswordHash = "AQAAAAEAACcQAAAAEFapGB26xZk0tTLzep1ZCdZFDyfp2sUvpJy/xayTTx3EE8CKAtiLmQyGYPMbtIKgBQ==",
                            PhoneNumber = "6949277783",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "alexandrosplatanios15@gmail.com"
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.CV", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVFullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("CVs");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CVPath = "/CV/CV.pdf",
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 14, DateTimeKind.Local).AddTicks(9304),
                            Description = "My CV",
                            IsActive = true,
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 19, DateTimeKind.Local).AddTicks(4705)
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.ContactData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkedLin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ContactData");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Fleming 14, Voula, 16673, Greece",
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 23, DateTimeKind.Local).AddTicks(6779),
                            Email = "alexandrosplatanios28@gmail.com",
                            FacebookLink = "https://www.facebook.com/profile.php?id=100013059701658",
                            FullName = "Alexandros Platanios",
                            InstagramLink = "https://www.instagram.com/alexandros_platanios/",
                            IsActive = true,
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 23, DateTimeKind.Local).AddTicks(1862),
                            LinkedLin = "https://www.linkedin.com/in/alexandros-platanios-723984203/",
                            Phone = "+30-6949277783",
                            SubTitle = "Do you have any questions? Please do not hesitate to contact ME directly.I'll come back to you within a matter of hours to help you.",
                            Title = "Contact us"
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.HomeData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageFullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Paragraph")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("HomeData");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 23, DateTimeKind.Local).AddTicks(125),
                            ImageFullPath = "",
                            ImagePath = "/img/home/me.jpg",
                            IsActive = true,
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(6813),
                            Paragraph = "\r\n                        The first book I started with was C++ at the age of 15 influenced by my brother \r\n                        'Anthony Platanios', but only as a hobby. When I was 18 I started working at a \r\n                        local gym as an instructor and I stayed in that field for 7 years. \r\n                        Right after that a friend of mine that is a programmer saw a code I made for my \r\n                        motorcycle and encouraged me to pursue programming.\r\n                    ",
                            SubTitle = "A bot about me",
                            Title = "Hello"
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageFullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(7299),
                            ImagePath = "~/ProjectImages/CBProject/img_1.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(7786),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(9695),
                            ImagePath = "~/ProjectImages/CBProject/img_2.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(9711),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(9773),
                            ImagePath = "~/ProjectImages/CBProject/img_3.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(9783),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(9912),
                            ImagePath = "~/ProjectImages/CBProject/img_4.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(9924),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(9978),
                            ImagePath = "~/ProjectImages/CBProject/img_5.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(9988),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(44),
                            ImagePath = "~/ProjectImages/CBProject/img_6.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(55),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(107),
                            ImagePath = "~/ProjectImages/CBProject/img_7.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(117),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(167),
                            ImagePath = "~/ProjectImages/CBProject/img_8.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(177),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 9,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(228),
                            ImagePath = "~/ProjectImages/CBProject/img_9.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(238),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 10,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(291),
                            ImagePath = "~/ProjectImages/CBProject/img_10.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(301),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 11,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(352),
                            ImagePath = "~/ProjectImages/CBProject/img_11.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(362),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 12,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(412),
                            ImagePath = "~/ProjectImages/CBProject/img_12.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(422),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 13,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(472),
                            ImagePath = "~/ProjectImages/CBProject/img_13.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(482),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 14,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(532),
                            ImagePath = "~/ProjectImages/CBProject/img_14.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(542),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 15,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(593),
                            ImagePath = "~/ProjectImages/CBProject/img_15.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(604),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 16,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(749),
                            ImagePath = "~/ProjectImages/CBProject/img_16.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(760),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 17,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(813),
                            ImagePath = "~/ProjectImages/CBProject/img_17.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(823),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 18,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(878),
                            ImagePath = "~/ProjectImages/CBProject/img_18.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(888),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 19,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(999),
                            ImagePath = "~/ProjectImages/CBProject/img_19.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1010),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 20,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1060),
                            ImagePath = "~/ProjectImages/CBProject/img_20.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1070),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 21,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1119),
                            ImagePath = "~/ProjectImages/CBProject/img_21.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1129),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 22,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1178),
                            ImagePath = "~/ProjectImages/CBProject/img_22.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1188),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 23,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1238),
                            ImagePath = "~/ProjectImages/CBProject/img_23.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1248),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 24,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1297),
                            ImagePath = "~/ProjectImages/CBProject/img_24.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1307),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 25,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1356),
                            ImagePath = "~/ProjectImages/CBProject/img_25.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1367),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 26,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1416),
                            ImagePath = "~/ProjectImages/CBProject/img_26.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1426),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 27,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1475),
                            ImagePath = "~/ProjectImages/CBProject/img_27.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1485),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 28,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1534),
                            ImagePath = "~/ProjectImages/CBProject/img_28.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1544),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 29,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1592),
                            ImagePath = "~/ProjectImages/CBProject/img_29.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1602),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 30,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1651),
                            ImagePath = "~/ProjectImages/CBProject/img_30.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1661),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 31,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1711),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_1.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1721),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 32,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1771),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_2.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1781),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 33,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1829),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_3.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1839),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 34,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1945),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_4.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(1956),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 35,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2007),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_5.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2017),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 36,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2067),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_6.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2076),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 37,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2127),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_7.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2137),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 38,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2188),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_8.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2197),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 39,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2247),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_9.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2257),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 40,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2305),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_10.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2315),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 41,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2365),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_11.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2375),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 42,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2424),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_12.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2434),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 43,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2484),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_13.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2494),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 44,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2544),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_14.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2553),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 45,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2603),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_15.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2613),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 46,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2663),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_1.jpg",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2673),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 47,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2723),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_2.jpg",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2733),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 48,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2830),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_3.jpg",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2841),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 49,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2894),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_4.jpg",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2904),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 50,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2954),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_5.jpg",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(2964),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 51,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3014),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_6.jpg",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3024),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 52,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3075),
                            ImagePath = "~/ProjectImages/Economy/img_1.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3086),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 53,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3135),
                            ImagePath = "~/ProjectImages/Economy/img_2.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3145),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 54,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3193),
                            ImagePath = "~/ProjectImages/Economy/img_3.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3203),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 55,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3251),
                            ImagePath = "~/ProjectImages/Economy/img_4.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3261),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 56,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3309),
                            ImagePath = "~/ProjectImages/Economy/img_5.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3319),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 57,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3367),
                            ImagePath = "~/ProjectImages/Economy/img_6.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3377),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 58,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3426),
                            ImagePath = "~/ProjectImages/Economy/img_7.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3436),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 59,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3485),
                            ImagePath = "~/ProjectImages/Elementum/img_1.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3495),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 60,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3543),
                            ImagePath = "~/ProjectImages/Elementum/img_2.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3553),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 61,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3602),
                            ImagePath = "~/ProjectImages/Elementum/img_3.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3612),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 62,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3661),
                            ImagePath = "~/ProjectImages/Elementum/img_4.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3670),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 63,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3719),
                            ImagePath = "~/ProjectImages/Elementum/img_5.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3729),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 64,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3829),
                            ImagePath = "~/ProjectImages/Elementum/img_6.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3841),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 65,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3892),
                            ImagePath = "~/ProjectImages/Elementum/img_7.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3902),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 66,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3955),
                            ImagePath = "~/ProjectImages/Elementum/img_8.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(3965),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 67,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4014),
                            ImagePath = "~/ProjectImages/Elementum/img_9.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4024),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 68,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4073),
                            ImagePath = "~/ProjectImages/Elementum/img_10.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4083),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 69,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4131),
                            ImagePath = "~/ProjectImages/Elementum/img_11.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4141),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 70,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4190),
                            ImagePath = "~/ProjectImages/Elementum/img_12.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4201),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 71,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4250),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_1.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4260),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 72,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4311),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_2.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4321),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 73,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4370),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_3.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4380),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 74,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4430),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_4.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4440),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 75,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4489),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_5.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4499),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 76,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4548),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_6.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4558),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 77,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4606),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_7.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4616),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 78,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4718),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_8.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4729),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 79,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4779),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_9.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4789),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 80,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4838),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_10.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4848),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 81,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4897),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_11.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4907),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 82,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4956),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_12.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(4966),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 83,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5015),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_13.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5025),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 84,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5073),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_14.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5084),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 85,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5133),
                            ImagePath = "~/ProjectImages/ElevatorDashboard/img_1.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5143),
                            ProjectId = 7
                        },
                        new
                        {
                            ID = 86,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5194),
                            ImagePath = "~/ProjectImages/ElevatorDashboard/img_2.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5204),
                            ProjectId = 7
                        },
                        new
                        {
                            ID = 87,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5254),
                            ImagePath = "~/ProjectImages/RemoteAutoMoto/img_1.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5264),
                            ProjectId = 8
                        },
                        new
                        {
                            ID = 88,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5314),
                            ImagePath = "~/ProjectImages/RemoteAutoMoto/img_2.png",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 22, DateTimeKind.Local).AddTicks(5324),
                            ProjectId = 8
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MyMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadLinkTar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadLinkZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,4)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebPage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(1730),
                            Description = "CBProject * ASP .NET FRAMEWORK * 2020/2021 * Online Course Platform:The customer can watch video tutorials or read ebooks.",
                            DownloadLinkTar = "https://github.com/Alexandros5880/CBProject/archive/refs/tags/v1.0.tar.gz",
                            DownloadLinkZip = "https://github.com/Alexandros5880/CBProject/archive/refs/tags/v1.0.zip",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(2256),
                            Price = 5.00m,
                            Title = "CBProject"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(5611),
                            Description = "IPCameras Dashborad * .NET CORE (WPF) * 2018/2019 * ESP32-CAM Dashboard:Support all model esp32 and a lot of markets ip cameras.",
                            DownloadLinkTar = "https://github.com/Alexandros5880/ESP32-Cam-Dashboard/archive/refs/tags/v1.0.tar.gz",
                            DownloadLinkZip = "https://github.com/Alexandros5880/ESP32-Cam-Dashboard/archive/refs/tags/v1.0.zip",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(5628),
                            Price = 5.00m,
                            Title = "IPCameras Dashboard"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(5679),
                            Description = "IPCameras Chip Software * ESP32 * C++:Frace Detaction + Face Recognition + Alerts + Effects",
                            DownloadLinkTar = "https://github.com/Alexandros5880/ESP32-Cam/archive/refs/tags/v0.1.tar.gz",
                            DownloadLinkZip = "https://github.com/Alexandros5880/ESP32-Cam/archive/refs/tags/v0.1.zip",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(5689),
                            Price = 0m,
                            Title = "IPCameras Chip Software * ESP32 * C++:"
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(5732),
                            Description = "Salesforce App To Manipulate Your Wallet.",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(5741),
                            Price = 0m,
                            Title = "Economy"
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(5781),
                            Description = "WordPress WebSite For KungFou School.",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(5790),
                            Price = 0m,
                            Title = "Eelementum",
                            WebPage = "https://elementumartialfitness.com"
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(6325),
                            Description = "A B&B App on Salesforce For Elevator Maintence Company.",
                            DownloadLinkTar = "https://github.com/Alexandros5880/ElevatorsManagement/archive/refs/tags/v1.0.tar.gz",
                            DownloadLinkZip = "https://github.com/Alexandros5880/ElevatorsManagement/archive/refs/tags/v1.0.zip",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(6340),
                            Price = 0m,
                            Title = "Elevators Managment"
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(6383),
                            Description = "A B&B App writen in Java For Elevator Maintence Company.",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(6393),
                            Price = 0m,
                            Title = "Elevators Dashboard"
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(6433),
                            Description = "Update Your Old Vichecle To Full Software Update.",
                            LastUpdateDate = new DateTime(2022, 8, 18, 18, 13, 9, 21, DateTimeKind.Local).AddTicks(6442),
                            Price = 0m,
                            Title = "Remote Auto Moto"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Image", b =>
                {
                    b.HasOne("MyWebSite.Data.Models.Project", "Project")
                        .WithMany("Images")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Order", b =>
                {
                    b.HasOne("MyWebSite.Data.Models.Project", "Project")
                        .WithMany("Orders")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Project", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
