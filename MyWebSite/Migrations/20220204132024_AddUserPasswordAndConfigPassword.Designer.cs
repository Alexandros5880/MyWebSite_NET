// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebSite.Data;

namespace MyWebSite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220204132024_AddUserPasswordAndConfigPassword")]
    partial class AddUserPasswordAndConfigPassword
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MyWebSite.Areas.Identity.Data.MyWebSiteRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("MyWebSite.Areas.Identity.Data.MyWebSiteUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfingPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.CV", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CVs");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "My CV",
                            IsActive = true,
                            Path = "/CV/CV.pdf"
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ImagePath = "~/ProjectImages/CBProject/img_1.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 2,
                            ImagePath = "~/ProjectImages/CBProject/img_2.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 3,
                            ImagePath = "~/ProjectImages/CBProject/img_3.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 4,
                            ImagePath = "~/ProjectImages/CBProject/img_4.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 5,
                            ImagePath = "~/ProjectImages/CBProject/img_5.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 6,
                            ImagePath = "~/ProjectImages/CBProject/img_6.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 7,
                            ImagePath = "~/ProjectImages/CBProject/img_7.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 8,
                            ImagePath = "~/ProjectImages/CBProject/img_8.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 9,
                            ImagePath = "~/ProjectImages/CBProject/img_9.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 10,
                            ImagePath = "~/ProjectImages/CBProject/img_10.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 11,
                            ImagePath = "~/ProjectImages/CBProject/img_11.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 12,
                            ImagePath = "~/ProjectImages/CBProject/img_12.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 13,
                            ImagePath = "~/ProjectImages/CBProject/img_13.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 14,
                            ImagePath = "~/ProjectImages/CBProject/img_14.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 15,
                            ImagePath = "~/ProjectImages/CBProject/img_15.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 16,
                            ImagePath = "~/ProjectImages/CBProject/img_16.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 17,
                            ImagePath = "~/ProjectImages/CBProject/img_17.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 18,
                            ImagePath = "~/ProjectImages/CBProject/img_18.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 19,
                            ImagePath = "~/ProjectImages/CBProject/img_19.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 20,
                            ImagePath = "~/ProjectImages/CBProject/img_20.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 21,
                            ImagePath = "~/ProjectImages/CBProject/img_21.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 22,
                            ImagePath = "~/ProjectImages/CBProject/img_22.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 23,
                            ImagePath = "~/ProjectImages/CBProject/img_23.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 24,
                            ImagePath = "~/ProjectImages/CBProject/img_24.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 25,
                            ImagePath = "~/ProjectImages/CBProject/img_25.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 26,
                            ImagePath = "~/ProjectImages/CBProject/img_26.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 27,
                            ImagePath = "~/ProjectImages/CBProject/img_27.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 28,
                            ImagePath = "~/ProjectImages/CBProject/img_28.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 29,
                            ImagePath = "~/ProjectImages/CBProject/img_29.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 30,
                            ImagePath = "~/ProjectImages/CBProject/img_30.png",
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 31,
                            ImagePath = "~/ProjectImages/Economy/img_1.png",
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 32,
                            ImagePath = "~/ProjectImages/Economy/img_2.png",
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 33,
                            ImagePath = "~/ProjectImages/Economy/img_3.png",
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 34,
                            ImagePath = "~/ProjectImages/Economy/img_4.png",
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 35,
                            ImagePath = "~/ProjectImages/Economy/img_5.png",
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 36,
                            ImagePath = "~/ProjectImages/Economy/img_6.png",
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 37,
                            ImagePath = "~/ProjectImages/Economy/img_7.png",
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 38,
                            ImagePath = "~/ProjectImages/Elementum/img_1.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 39,
                            ImagePath = "~/ProjectImages/Elementum/img_2.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 40,
                            ImagePath = "~/ProjectImages/Elementum/img_3.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 41,
                            ImagePath = "~/ProjectImages/Elementum/img_4.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 42,
                            ImagePath = "~/ProjectImages/Elementum/img_5.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 43,
                            ImagePath = "~/ProjectImages/Elementum/img_6.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 44,
                            ImagePath = "~/ProjectImages/Elementum/img_7.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 45,
                            ImagePath = "~/ProjectImages/Elementum/img_8.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 46,
                            ImagePath = "~/ProjectImages/Elementum/img_9.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 47,
                            ImagePath = "~/ProjectImages/Elementum/img_10.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 48,
                            ImagePath = "~/ProjectImages/Elementum/img_11.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 49,
                            ImagePath = "~/ProjectImages/Elementum/img_12.png",
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 50,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_1.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 51,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_2.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 52,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_3.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 53,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_4.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 54,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_5.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 55,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_6.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 56,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_7.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 57,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_8.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 58,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_9.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 59,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_10.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 60,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_11.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 61,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_12.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 62,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_13.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 63,
                            ImagePath = "~/ProjectImages/ElevatorDash/img_14.png",
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 64,
                            ImagePath = "~/ProjectImages/ElevatorsManagmentSystem/img_1.png",
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 65,
                            ImagePath = "~/ProjectImages/ElevatorsManagmentSystem/img_2.png",
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 66,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_1.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 67,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_2.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 68,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_3.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 69,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_4.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 70,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_5.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 71,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_6.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 72,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_7.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 73,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_8.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 74,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_9.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 75,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_10.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 76,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_11.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 77,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_12.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 78,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_13.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 79,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_14.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 80,
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_15.png",
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 81,
                            ImagePath = "~/ProjectImages/RemoteAutoMoto/img_1.png",
                            ProjectId = 7
                        },
                        new
                        {
                            ID = 82,
                            ImagePath = "~/ProjectImages/RemoteAutoMoto/img_2.png",
                            ProjectId = 7
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Online School For Data Sience.",
                            Price = 0m,
                            Title = "CBProject"
                        },
                        new
                        {
                            ID = 2,
                            Description = "Salesforce App To Manipulate Your Wallet.",
                            Price = 0m,
                            Title = "Economy"
                        },
                        new
                        {
                            ID = 3,
                            Description = "WordPress WebSite For KungFou School.",
                            Price = 0m,
                            Title = "Eelementum"
                        },
                        new
                        {
                            ID = 4,
                            Description = "A B&B App For Elevator Maintence Company.",
                            Price = 0m,
                            Title = "Elevators Dashboard"
                        },
                        new
                        {
                            ID = 5,
                            Description = "A B&B App For Elevator Maintence Company.",
                            Price = 0m,
                            Title = "Elevators Managment"
                        },
                        new
                        {
                            ID = 6,
                            Description = "IPCameras Security Software.",
                            Price = 0m,
                            Title = "IPCameras Dashboard"
                        },
                        new
                        {
                            ID = 7,
                            Description = "Update Your Old Vichecle To Full Software Update.",
                            Price = 0m,
                            Title = "Remote Auto Moto"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Image", b =>
                {
                    b.HasOne("MyWebSite.Data.Models.Project", "Project")
                        .WithMany("Images")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Project", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
