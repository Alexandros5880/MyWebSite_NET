// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebSite.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MyWebSite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            RoleId = "ad376a8f-9eab-4bb9-9fca-30b01540f445"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MyWebSite.Areas.Identity.Data.MyWebSiteRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ad376a8f-9eab-4bb9-9fca-30b01540f445",
                            ConcurrencyStamp = "5b081ec5-bcc6-4c8d-8388-a6f4b9cd1dfc",
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 392, DateTimeKind.Local).AddTicks(3692),
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Admin",
                            NormalizedName = "Admin"
                        });
                });

            modelBuilder.Entity("MyWebSite.Areas.Identity.Data.MyWebSiteUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("ConfingPassword")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "a18be9c0-aa65-4af8-bd17-00bd9344e575",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c1991527-a0df-4dae-8ef9-e6e6c9321069",
                            ConfingPassword = "-Platanios719791",
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 392, DateTimeKind.Local).AddTicks(8240),
                            Email = "alexandrosplatanios15@gmail.com",
                            EmailConfirmed = false,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            NormalizedEmail = "alexandrosplatanios15@gmail.com",
                            NormalizedUserName = "alexandrosplatanios15@gmail.com",
                            Password = "-Platanios719791",
                            PasswordHash = "AQAAAAEAACcQAAAAEATGHf6DUyyXPU4ddcF3npjmxAZwixndK0ObwAUgZJd/YlTOpOohQiSaeGTIcHfs7Q==",
                            PhoneNumber = "6949277783",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "alexandrosplatanios15@gmail.com"
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.CV", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CVFullPath")
                        .HasColumnType("text");

                    b.Property<string>("CVPath")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.ToTable("CVs");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CVPath = "/CV/CV.pdf",
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 382, DateTimeKind.Local).AddTicks(3881),
                            Description = "My CV",
                            IsActive = true,
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 386, DateTimeKind.Local).AddTicks(7834)
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.ContactData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("InstagramLink")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LinkedLin")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("SubTitle")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("ContactData");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Fleming 14, Voula, 16673, Greece",
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 391, DateTimeKind.Local).AddTicks(6152),
                            Email = "alexandrosplatanios28@gmail.com",
                            FacebookLink = "https://www.facebook.com/profile.php?id=100013059701658",
                            FullName = "Alexandros Platanios",
                            InstagramLink = "https://www.instagram.com/alexandros_platanios/",
                            IsActive = true,
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 391, DateTimeKind.Local).AddTicks(20),
                            LinkedLin = "https://www.linkedin.com/in/alexandros-platanios-723984203/",
                            Phone = "+30-6949277783",
                            SubTitle = "Do you have any questions? Please do not hesitate to contact ME directly.I'll come back to you within a matter of hours to help you.",
                            Title = "Contact us"
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.HomeData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ImageFullPath")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Paragraph")
                        .HasColumnType("text");

                    b.Property<string>("SubTitle")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("HomeData");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(8061),
                            ImageFullPath = "",
                            ImagePath = "/img/home/me.jpg",
                            IsActive = true,
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(4195),
                            Paragraph = "The first book I started with was C++ at the age of 15, but only as a hobby. When I was 18 I started working at a local gym as an instructor and I stayed in that field for 7 years. Right after that a friend of mine that is a programmer saw a code I made for my motorcycle and encouraged me to pursue programming.",
                            SubTitle = "A bot about me",
                            Title = "Hello"
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ImageFullPath")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("ProjectId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(2562),
                            ImagePath = "~/ProjectImages/CBProject/img_1.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(3265),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5630),
                            ImagePath = "~/ProjectImages/CBProject/img_2.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5658),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5726),
                            ImagePath = "~/ProjectImages/CBProject/img_3.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5737),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5792),
                            ImagePath = "~/ProjectImages/CBProject/img_4.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5802),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5855),
                            ImagePath = "~/ProjectImages/CBProject/img_5.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5865),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5922),
                            ImagePath = "~/ProjectImages/CBProject/img_6.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(5932),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6070),
                            ImagePath = "~/ProjectImages/CBProject/img_7.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6082),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6135),
                            ImagePath = "~/ProjectImages/CBProject/img_8.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6145),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 9,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6195),
                            ImagePath = "~/ProjectImages/CBProject/img_9.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6205),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 10,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6258),
                            ImagePath = "~/ProjectImages/CBProject/img_10.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6268),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 11,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6319),
                            ImagePath = "~/ProjectImages/CBProject/img_11.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6330),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 12,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6380),
                            ImagePath = "~/ProjectImages/CBProject/img_12.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6391),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 13,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6441),
                            ImagePath = "~/ProjectImages/CBProject/img_13.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6450),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 14,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6502),
                            ImagePath = "~/ProjectImages/CBProject/img_14.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6511),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 15,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6563),
                            ImagePath = "~/ProjectImages/CBProject/img_15.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6572),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 16,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6662),
                            ImagePath = "~/ProjectImages/CBProject/img_16.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6675),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 17,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6737),
                            ImagePath = "~/ProjectImages/CBProject/img_17.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6748),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 18,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6818),
                            ImagePath = "~/ProjectImages/CBProject/img_18.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6830),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 19,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6899),
                            ImagePath = "~/ProjectImages/CBProject/img_19.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6912),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 20,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6985),
                            ImagePath = "~/ProjectImages/CBProject/img_20.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(6998),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 21,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7077),
                            ImagePath = "~/ProjectImages/CBProject/img_21.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7091),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 22,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7246),
                            ImagePath = "~/ProjectImages/CBProject/img_22.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7260),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 23,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7358),
                            ImagePath = "~/ProjectImages/CBProject/img_23.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7378),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 24,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7466),
                            ImagePath = "~/ProjectImages/CBProject/img_24.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7484),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 25,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7551),
                            ImagePath = "~/ProjectImages/CBProject/img_25.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7561),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 26,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7613),
                            ImagePath = "~/ProjectImages/CBProject/img_26.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7623),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 27,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7674),
                            ImagePath = "~/ProjectImages/CBProject/img_27.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7684),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 28,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7735),
                            ImagePath = "~/ProjectImages/CBProject/img_28.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7745),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 29,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7795),
                            ImagePath = "~/ProjectImages/CBProject/img_29.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7805),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 30,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7856),
                            ImagePath = "~/ProjectImages/CBProject/img_30.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7866),
                            ProjectId = 1
                        },
                        new
                        {
                            ID = 31,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7917),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_1.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7928),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 32,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7979),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_2.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(7989),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 33,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8041),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_3.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8051),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 34,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8107),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_4.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8117),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 35,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8169),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_5.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8179),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 36,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8294),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_6.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8305),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 37,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8362),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_7.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8372),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 38,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8423),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_8.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8433),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 39,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8483),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_9.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8493),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 40,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8545),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_10.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8555),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 41,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8606),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_11.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8616),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 42,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8666),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_12.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8676),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 43,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8765),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_13.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8778),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 44,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8847),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_14.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8859),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 45,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8929),
                            ImagePath = "~/ProjectImages/IPCamerasDashboard/img_15.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(8942),
                            ProjectId = 2
                        },
                        new
                        {
                            ID = 46,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9016),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_1.jpg",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9030),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 47,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9100),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_2.jpg",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9114),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 48,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9186),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_3.jpg",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9199),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 49,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9269),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_4.jpg",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9283),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 50,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9353),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_5.jpg",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9366),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 51,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9534),
                            ImagePath = "~/ProjectImages/IPCamerasESP32/img_6.jpg",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9549),
                            ProjectId = 3
                        },
                        new
                        {
                            ID = 52,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9649),
                            ImagePath = "~/ProjectImages/Economy/img_1.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9661),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 53,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9720),
                            ImagePath = "~/ProjectImages/Economy/img_2.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9729),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 54,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9781),
                            ImagePath = "~/ProjectImages/Economy/img_3.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9791),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 55,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9844),
                            ImagePath = "~/ProjectImages/Economy/img_4.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9854),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 56,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9906),
                            ImagePath = "~/ProjectImages/Economy/img_5.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9916),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 57,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9968),
                            ImagePath = "~/ProjectImages/Economy/img_6.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(9978),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 58,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(30),
                            ImagePath = "~/ProjectImages/Economy/img_7.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(40),
                            ProjectId = 4
                        },
                        new
                        {
                            ID = 59,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(92),
                            ImagePath = "~/ProjectImages/Elementum/img_1.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(101),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 60,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(155),
                            ImagePath = "~/ProjectImages/Elementum/img_2.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(165),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 61,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(217),
                            ImagePath = "~/ProjectImages/Elementum/img_3.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(227),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 62,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(278),
                            ImagePath = "~/ProjectImages/Elementum/img_4.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(288),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 63,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(340),
                            ImagePath = "~/ProjectImages/Elementum/img_5.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(350),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 64,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(401),
                            ImagePath = "~/ProjectImages/Elementum/img_6.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(411),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 65,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(462),
                            ImagePath = "~/ProjectImages/Elementum/img_7.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(472),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 66,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(590),
                            ImagePath = "~/ProjectImages/Elementum/img_8.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(601),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 67,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(654),
                            ImagePath = "~/ProjectImages/Elementum/img_9.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(664),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 68,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(714),
                            ImagePath = "~/ProjectImages/Elementum/img_10.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(724),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 69,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(775),
                            ImagePath = "~/ProjectImages/Elementum/img_11.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(785),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 70,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(836),
                            ImagePath = "~/ProjectImages/Elementum/img_12.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(846),
                            ProjectId = 5
                        },
                        new
                        {
                            ID = 71,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(908),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_1.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(924),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 72,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1004),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_2.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1016),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 73,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1081),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_3.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1093),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 74,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1161),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_4.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1173),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 75,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1245),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_5.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1258),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 76,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1332),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_6.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1349),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 77,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1442),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_7.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1454),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 78,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1547),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_8.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1559),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 79,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1613),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_9.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1623),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 80,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1674),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_10.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1684),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 81,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1807),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_11.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1819),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 82,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1871),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_12.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1881),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 83,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1932),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_13.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1942),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 84,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(1993),
                            ImagePath = "~/ProjectImages/ElevatorManagment/img_14.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(2003),
                            ProjectId = 6
                        },
                        new
                        {
                            ID = 85,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(2055),
                            ImagePath = "~/ProjectImages/ElevatorDashboard/img_1.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(2066),
                            ProjectId = 7
                        },
                        new
                        {
                            ID = 86,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(2118),
                            ImagePath = "~/ProjectImages/ElevatorDashboard/img_2.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(2128),
                            ProjectId = 7
                        },
                        new
                        {
                            ID = 87,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(2180),
                            ImagePath = "~/ProjectImages/RemoteAutoMoto/img_1.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(2190),
                            ProjectId = 8
                        },
                        new
                        {
                            ID = 88,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(2241),
                            ImagePath = "~/ProjectImages/RemoteAutoMoto/img_2.png",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 390, DateTimeKind.Local).AddTicks(2252),
                            ProjectId = 8
                        });
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MyMessage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("OrderID")
                        .HasColumnType("text");

                    b.Property<string>("PayerID")
                        .HasColumnType("text");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("ProjectId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DownloadLinkTar")
                        .HasColumnType("text");

                    b.Property<string>("DownloadLinkZip")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,4)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WebPage")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 388, DateTimeKind.Local).AddTicks(5708),
                            Description = "CBProject * ASP .NET FRAMEWORK * 2020/2021 * Online Course Platform:The customer can watch video tutorials or read ebooks.",
                            DownloadLinkTar = "https://github.com/Alexandros5880/CBProject/archive/refs/tags/v1.0.tar.gz",
                            DownloadLinkZip = "https://github.com/Alexandros5880/CBProject/archive/refs/tags/v1.0.zip",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 388, DateTimeKind.Local).AddTicks(6282),
                            Price = 5.00m,
                            Title = "CBProject"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(471),
                            Description = "IPCameras Dashborad * .NET CORE (WPF) * 2018/2019 * ESP32-CAM Dashboard:Support all model esp32 and a lot of markets ip cameras.",
                            DownloadLinkTar = "https://github.com/Alexandros5880/ESP32-Cam-Dashboard/archive/refs/tags/v1.0.tar.gz",
                            DownloadLinkZip = "https://github.com/Alexandros5880/ESP32-Cam-Dashboard/archive/refs/tags/v1.0.zip",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(493),
                            Price = 5.00m,
                            Title = "IPCameras Dashboard"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(553),
                            Description = "IPCameras Chip Software * ESP32 * C++:Frace Detaction + Face Recognition + Alerts + Effects",
                            DownloadLinkTar = "https://github.com/Alexandros5880/ESP32-Cam/archive/refs/tags/v0.1.tar.gz",
                            DownloadLinkZip = "https://github.com/Alexandros5880/ESP32-Cam/archive/refs/tags/v0.1.zip",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(564),
                            Price = 0m,
                            Title = "IPCameras Chip Software * ESP32 * C++:"
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(611),
                            Description = "Salesforce App To Manipulate Your Wallet.",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(621),
                            Price = 0m,
                            Title = "Economy"
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(665),
                            Description = "WordPress WebSite For KungFou School.",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(674),
                            Price = 0m,
                            Title = "Eelementum",
                            WebPage = "https://elementumartialfitness.com"
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(1392),
                            Description = "A B&B App on Salesforce For Elevator Maintence Company.",
                            DownloadLinkTar = "https://github.com/Alexandros5880/ElevatorsManagement/archive/refs/tags/v1.0.tar.gz",
                            DownloadLinkZip = "https://github.com/Alexandros5880/ElevatorsManagement/archive/refs/tags/v1.0.zip",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(1417),
                            Price = 0m,
                            Title = "Elevators Managment"
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(1497),
                            Description = "A B&B App writen in Java For Elevator Maintence Company.",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(1511),
                            Price = 0m,
                            Title = "Elevators Dashboard"
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(1585),
                            Description = "Update Your Old Vichecle To Full Software Update.",
                            LastUpdateDate = new DateTime(2022, 3, 2, 19, 21, 50, 389, DateTimeKind.Local).AddTicks(1602),
                            Price = 0m,
                            Title = "Remote Auto Moto"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MyWebSite.Areas.Identity.Data.MyWebSiteUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Image", b =>
                {
                    b.HasOne("MyWebSite.Data.Models.Project", "Project")
                        .WithMany("Images")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Order", b =>
                {
                    b.HasOne("MyWebSite.Data.Models.Project", "Project")
                        .WithMany("Orders")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MyWebSite.Data.Models.Project", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
